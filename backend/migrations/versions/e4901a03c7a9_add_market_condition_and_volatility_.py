"""Add market_condition and volatility_level to MarketSentiment"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e4901a03c7a9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sector_fundamentals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sector_name', sa.String(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('pe_ratio', sa.Float(), nullable=True),
    sa.Column('pb_ratio', sa.Float(), nullable=True),
    sa.Column('earnings_growth', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_sector_date', 'sector_fundamentals', ['sector_name', 'date'], unique=False)
    op.create_index(op.f('ix_sector_fundamentals_date'), 'sector_fundamentals', ['date'], unique=False)
    op.create_index(op.f('ix_sector_fundamentals_id'), 'sector_fundamentals', ['id'], unique=False)
    op.create_index(op.f('ix_sector_fundamentals_sector_name'), 'sector_fundamentals', ['sector_name'], unique=False)
    op.create_index('idx_date_impact', 'economic_events', ['date', 'impact'], unique=False)
    op.add_column('market_sentiments', sa.Column('date', sa.Date(), nullable=True))
    op.add_column('market_sentiments', sa.Column('avg_daily_score', sa.Float(), nullable=True))
    op.add_column('market_sentiments', sa.Column('moving_avg_7d', sa.Float(), nullable=True))
    op.add_column('market_sentiments', sa.Column('news_score', sa.Float(), nullable=True))
    op.add_column('market_sentiments', sa.Column('reddit_score', sa.Float(), nullable=True))
    op.add_column('market_sentiments', sa.Column('benchmark', sa.String(), nullable=True))
    op.add_column('market_sentiments', sa.Column('market_condition', sa.String(), nullable=True))
    op.add_column('market_sentiments', sa.Column('volatility_level', sa.Float(), nullable=True))
    op.create_index('idx_symbol_date', 'market_sentiments', ['symbol', 'date'], unique=False)
    op.create_index(op.f('ix_market_sentiments_date'), 'market_sentiments', ['date'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_market_sentiments_date'), table_name='market_sentiments')
    op.drop_index('idx_symbol_date', table_name='market_sentiments')
    op.drop_column('market_sentiments', 'volatility_level')
    op.drop_column('market_sentiments', 'market_condition')
    op.drop_column('market_sentiments', 'benchmark')
    op.drop_column('market_sentiments', 'reddit_score')
    op.drop_column('market_sentiments', 'news_score')
    op.drop_column('market_sentiments', 'moving_avg_7d')
    op.drop_column('market_sentiments', 'avg_daily_score')
    op.drop_column('market_sentiments', 'date')
    op.drop_index('idx_date_impact', table_name='economic_events')
    op.drop_index(op.f('ix_sector_fundamentals_sector_name'), table_name='sector_fundamentals')
    op.drop_index(op.f('ix_sector_fundamentals_id'), table_name='sector_fundamentals')
    op.drop_index(op.f('ix_sector_fundamentals_date'), table_name='sector_fundamentals')
    op.drop_index('idx_sector_date', table_name='sector_fundamentals')
    op.drop_table('sector_fundamentals')
    # ### end Alembic commands ###
